x-logging:
  &default-logging # define logging options as anchor
  options: # log to stdout
    max-size: "100k" # limit size of individual log files
    max-file: "5" # keep 5 log files
  driver: json-file # log to json files

services:
  traefik:
    image: traefik:v2.10.7 
    logging: *default-logging # use logging options defined above
    security_opt:
      - no-new-privileges:true
    labels:
      - traefik.enable=${TRAEFIK_API_ENABLE:-false}
      - traefik.http.middlewares.api-auth.basicauth.users=${TRAEFIK_API_BASIC_AUTH_USERS:-}
      - traefik.http.routers.api.middlewares=api-auth
      - traefik.http.routers.api.rule=Host(`traefik.${CF_DOMAIN}`)
      - traefik.http.routers.api.service=api@internal
      - traefik.http.services.api.loadBalancer.server.port=80 # dummy port required in host mode
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)

    environment:
      CF_API_KEY: ${CF_API_TOKEN}
      CF_API_EMAIL: ${CF_API_EMAIL}
    command:
      # act as a reverse proxy for docker containers with label "traefik.enable=true"
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      # enable stdout access log
      - --accessLog=true
      - --accessLog.filePath=./logs:/var/log/traefik/access.log
      # enable traefik dashboard
      - --api.dashboard=${TRAEFIK_API_ENABLE:-false}
      # listen addresses
      - --ping.entrypoint=ping
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      # OpenZiti Dashboard
      - --entryPoints.ziti-dasboard.address=:8443
      # enable zabbix monitoring Ports
#      - --entryPoints.ziti-dasboard.address=:8443
#      - --entryPoints.zabbix-tcp.address=:10051
#      - --entryPoints.zabbix-udp.address=:10051/udp
      # trust cloudflare forwarded headers (https://www.cloudflare.com/ips-v4)
      - --entryPoints.web.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.websecure.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      # redirect http to https
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      # configure letsencrypt acme
      - --certificatesResolvers.letsencrypt.acme.dnsChallenge=true
      - --certificatesResolvers.letsencrypt.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.letsencrypt.acme.email=${CF_API_EMAIL}
      - --certificatesResolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      # configure letsencrypt default certificate
      - --entryPoints.websecure.http.tls.certResolver=letsencrypt
      - --entryPoints.websecure.http.tls.domains[0].main=${CF_DOMAIN}
      - --entryPoints.websecure.http.tls.domains[0].sans=*.${CF_DOMAIN}
      # Prometheus metrics
      - --metrics.prometheus.buckets=0.1,0.3,1.2,5.0
      - --global.checkNewVersion=true # check for new traefik version
      # trust insecure certificates
      - --serversTransport.insecureSkipVerify=true
      # opt out of usage statistics
      - --global.sendAnonymousUsage=false
    network_mode: host
#    ports:
#      - 10050:10050
#      - 10051:10051
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./volumes/traefik/acme:/etc/traefik/acme
      - ./logs:/var/log/traefik # mount access log directory
 
    restart: unless-stopped
      
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8082/ping","--spider"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  cloudflare:
    image: tiredofit/traefik-cloudflare-companion
    logging: *default-logging
    security_opt:
      - no-new-privileges:true
    environment:
      CONTAINER_ENABLE_MONITORING: "false" # Enable monitoring of container - true/false  
      CF_EMAIL: ${CF_API_EMAIL}
      CF_TOKEN: ${CF_API_TOKEN}
      DOMAIN1: ${CF_DOMAIN}
      DOMAIN1_PROXIED: ${CF_DOMAIN_PROXIED:-true}
      DOMAIN1_ZONE_ID: ${CF_ZONE_ID}
      TARGET_DOMAIN: ${CF_TARGET:-CF_DOMAIN}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - traefik
    restart: unless-stopped
